(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{uEKB:function(r,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return A}));var n=t("dI71"),o=t("q1tI"),a=t.n(o),i=t("z0FI"),f=(t("PF2M"),t("IZzc"),t("GsDp")),c=t("tdDb"),u=function(r){function e(){return r.apply(this,arguments)||this}Object(n.a)(e,r);var t=e.prototype;return t.onCreateContext=function(r){var e=r.canvas.getContext("webgl");if(!e)throw new Error("THIS DEMO REQUIRES WEBGL (NON-EXPERIMENTAL) BUT YOUR BROWSER DOESN'T SUPPORT IT");return Object(f.a)(e)},t.onInitialize=function(r){var e=r.gl;e.clearColor(0,0,0,1);var t=e.createShader(e.VERTEX_SHADER);e.shaderSource(t,"\n      attribute vec2 position;\n      attribute vec3 color;\n      attribute vec2 offset;\n\n      varying vec3 vColor;\n\n      void main() {\n        vColor = color;\n        gl_Position = vec4(position + offset, 0.0, 1.0);\n      }\n    "),e.compileShader(t);var n=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(n,"\n      precision highp float;\n\n      varying vec3 vColor;\n\n      void main() {\n        gl_FragColor = vec4(vColor, 1.0);\n      }\n    "),e.compileShader(n);var o=e.createProgram();e.attachShader(o,t),e.attachShader(o,n),e.linkProgram(o);var a=e.createVertexArray();e.bindVertexArray(a);var i=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-.2,-.2,.2,-.2,0,.2]),e.STATIC_DRAW);var f=e.getAttribLocation(o,"position");e.vertexAttribPointer(f,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(f);var c=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,c),e.bufferData(e.ARRAY_BUFFER,new Float32Array([1,0,0,0,1,0,0,0,1,1,1,0]),e.STATIC_DRAW);var u=e.getAttribLocation(o,"color");e.vertexAttribPointer(u,3,e.FLOAT,!1,0,0),e.vertexAttribDivisor(u,1),e.enableVertexAttribArray(u);var A=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,A),e.bufferData(e.ARRAY_BUFFER,new Float32Array([.5,.5,-.5,.5,.5,-.5,-.5,-.5]),e.STATIC_DRAW);var l=e.getAttribLocation(o,"offset");e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0),e.vertexAttribDivisor(l,1),e.enableVertexAttribArray(l),e.bindVertexArray(null),this.resources={positionBuffer:i,colorBuffer:c,offsetBuffer:A,program:o,vertexArray:a}},t.onRender=function(r){var e=r.gl;e.clear(e.COLOR_BUFFER_BIT),e.bindVertexArray(this.resources.vertexArray),e.useProgram(this.resources.program),e.drawArraysInstanced(e.TRIANGLES,0,3,4)},t.onFinalize=function(r){var e=r.gl,t=this.resources,n=t.positionBuffer,o=t.colorBuffer,a=t.offsetBuffer,i=t.program,f=t.vertexArray;e.deleteBuffer(n),e.deleteBuffer(o),e.deleteBuffer(a),e.deleteProgram(i),e.deleteVertexArray(f)},e}(c.d);(u.info="\nInstanced triangles using luma.gl's low-level API\n","undefined"==typeof window||window.website)||(new u).start();var A=function(r){function e(){return r.apply(this,arguments)||this}return Object(n.a)(e,r),e.prototype.render=function(){var r=this.props.pageContext,e=r&&r.exampleConfig||{};return a.a.createElement(i.a,{AnimationLoop:u,exampleConfig:e})},e}(a.a.Component)}}]);