(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{XneE:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return C}));var a=n("dI71"),r=n("q1tI"),o=n.n(r),i=n("z0FI"),s=(n("PF2M"),n("IZzc"),n("IA9D")),f=n("yIe6"),u=n("1MEA"),d=n("ebS/"),l=n("tdDb"),c=n("kh/P"),m=n("yeNo"),h=[1,1,0,-1,1,0,1,-1,0,-1,-1,0],p=function(e){function t(t,n){var a,r=n.count,o=new Array(r),i=new Float32Array(16*r),s=new l.c(t,i.byteLength);return(a=e.call(this,t,Object.assign({geometry:new f.a},n,{vs:"#version 300 es\n#define SHADER_NAME scene.vs\n\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\nin vec4 modelMatCol1;\nin vec4 modelMatCol2;\nin vec4 modelMatCol3;\nin vec4 modelMatCol4;\n\nuniform mat4 uView;\nuniform mat4 uProjection;\nout vec3 vNormal;\nout vec2 vUV;\n\nvoid main(void) {\n  mat4 modelMat = mat4(\n    modelMatCol1,\n    modelMatCol2,\n    modelMatCol3,\n    modelMatCol4\n  );\n  gl_Position = uProjection * uView * modelMat * vec4(positions, 1.0);\n  vNormal = vec3(modelMat * vec4(normals, 0.0));\n  vUV = texCoords;\n}\n",fs:"#version 300 es\nprecision highp float;\n#define SHADER_NAME scene.fs\n\nin vec3 vNormal;\nin vec2 vUV;\nuniform sampler2D uTexture;\n\nout vec4 fragColor;\nvoid main(void) {\n  float d = clamp(dot(normalize(vNormal), normalize(vec3(1.0, 1.0, 0.2))), 0.0, 1.0);\n  fragColor.rgb = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y)).rgb * (d + 0.1);\n  fragColor.a = 1.0;\n}\n",isInstanced:1,instanceCount:r,uniforms:{uTexture:n.uniforms.uTexture},attributes:{modelMatCol1:{buffer:s,size:4,stride:64,offset:0,divisor:1},modelMatCol2:{buffer:s,size:4,stride:64,offset:16,divisor:1},modelMatCol3:{buffer:s,size:4,stride:64,offset:32,divisor:1},modelMatCol4:{buffer:s,size:4,stride:64,offset:48,divisor:1}}}))||this).count=r,a.xforms=o,a.matrices=i,a.matrixBuffer=s,a}return Object(a.a)(t,e),t.prototype.updateMatrixBuffer=function(){this.matrixBuffer.setData(this.matrices)},t}(u.a),v=2,g=3,E=2.8,T=new Float32Array(2),b=function(e){function t(t){var n,a,r,o,i,f=t.device;if((i=e.call(this)||this).projMat=new c.a,i.viewMat=(new c.a).lookAt({eye:[0,0,8]}),i.instancedCubeTransforms=[],!f.features.has("webgl2"))throw new Error("THIS DEMO REQUIRES WEBGL 2, BUT YOUR BROWSER DOESN'T SUPPORT IT");i.dofUniformsLayout=new l.o({uDepthRange:s.a.FLOAT_VEC2,uFocusDistance:s.a.FLOAT,uBlurCoefficient:s.a.FLOAT,uPPM:s.a.FLOAT}).setUniforms({uDepthRange:[.1,30]}),i.dofUniforms=f.createBuffer({target:s.a.UNIFORM_BUFFER,data:i.dofUniformsLayout.getData(),accessor:{index:0}}),i.dofProgram=new l.h(f,{id:"DOF_PROGRAM",vs:"#version 300 es\n#define SHADER_NAME quad.vs\n\nlayout(location=0) in vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1.0);\n}\n",fs:"#version 300 es\nprecision highp float;\n#define SHADER_NAME dof.fs\n\n#define MAX_BLUR 20.0\n\nuniform DOFUniforms {\n  vec2  uDepthRange;\n  float uFocusDistance;\n  float uBlurCoefficient;\n  float uPPM;\n};\n\nuniform vec2 uTexelOffset;\n\nuniform sampler2D uColor;\nuniform sampler2D uDepth;\n\nout vec4 fragColor;\n\nvoid main() {\n    ivec2 fragCoord = ivec2(gl_FragCoord.xy);\n    ivec2 resolution = textureSize(uColor, 0) - 1;\n\n    // Convert to linear depth\n    float ndc = 2.0 * texelFetch(uDepth, fragCoord, 0).r - 1.0;\n    float depth = -(2.0 * uDepthRange.y * uDepthRange.x) / (ndc * (uDepthRange.y - uDepthRange.x) - uDepthRange.y - uDepthRange.x);\n    float deltaDepth = abs(uFocusDistance - depth);\n\n    // Blur more quickly in the foreground.\n    float xdd = depth < uFocusDistance ? abs(uFocusDistance - deltaDepth) : abs(uFocusDistance + deltaDepth);\n    float blurRadius = min(floor(uBlurCoefficient * (deltaDepth / xdd) * uPPM), MAX_BLUR);\n\n    vec4 color = vec4(0.0);\n    if (blurRadius > 1.0) {\n        float halfBlur = blurRadius * 0.5;\n\n        float count = 0.0;\n\n        for (float i = 0.0; i <= MAX_BLUR; ++i) {\n            if (i > blurRadius) {\n                break;\n            }\n\n            // texelFetch outside texture gives vec4(0.0) (undefined in ES 3)\n            ivec2 sampleCoord = clamp(fragCoord + ivec2(((i - halfBlur) * uTexelOffset)), ivec2(0), resolution);\n            color += texelFetch(uColor, sampleCoord, 0);\n\n            ++count;\n        }\n\n        color /= count;\n    } else {\n        color = texelFetch(uColor, fragCoord, 0);\n    }\n\n    fragColor = color;\n}\n",parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}}),i.dofProgram.uniformBlockBinding(i.dofProgram.getUniformBlockIndex("DOFUniforms"),0),i.sceneFramebuffer=new l.f(f,{width:gl.drawingBufferWidth,height:gl.drawingBufferHeight,attachments:(r={},r[s.a.COLOR_ATTACHMENT0]=f.createTexture({format:s.a.RGBA,type:s.a.UNSIGNED_BYTE,width:gl.drawingBufferWidth,height:gl.drawingBufferHeight,mipmaps:!1,parameters:(n={},n[s.a.TEXTURE_MIN_FILTER]=s.a.LINEAR,n[s.a.TEXTURE_MAG_FILTER]=s.a.LINEAR,n[s.a.TEXTURE_WRAP_S]=s.a.CLAMP_TO_EDGE,n[s.a.TEXTURE_WRAP_T]=s.a.CLAMP_TO_EDGE,n)}),r[s.a.DEPTH_ATTACHMENT]=f.createTexture({format:s.a.DEPTH_COMPONENT16,type:s.a.UNSIGNED_SHORT,dataFormat:s.a.DEPTH_COMPONENT,width:gl.drawingBufferWidth,height:gl.drawingBufferHeight,mipmaps:!1,parameters:(a={},a[s.a.TEXTURE_MIN_FILTER]=s.a.NEAREST,a[s.a.TEXTURE_MAG_FILTER]=s.a.NEAREST,a[s.a.TEXTURE_WRAP_S]=s.a.CLAMP_TO_EDGE,a[s.a.TEXTURE_WRAP_T]=s.a.CLAMP_TO_EDGE,a)}),r)}),i.dofFramebuffer=new l.f(f,{width:gl.drawingBufferWidth,height:gl.drawingBufferHeight,depth:!1});var u=document.getElementById("focal-length"),d=document.getElementById("focus-distance"),m=document.getElementById("f-stop");u&&(u.value=v,u.addEventListener("input",(function(){v=parseFloat(u.value)})),d.value=g,d.addEventListener("input",(function(){g=parseFloat(d.value)})),m.value=E,m.addEventListener("input",(function(){E=parseFloat(m.value)})));var T=f.createTexture({data:"vis-logo.png",mipmaps:!0,parameters:(o={},o[s.a.TEXTURE_MAG_FILTER]=s.a.LINEAR,o[s.a.TEXTURE_MIN_FILTER]=s.a.LINEAR_MIPMAP_NEAREST,o)});i.instancedCubes=new p(f,{count:100,uniforms:{uTexture:T}});for(var b=0,C=0;C<5;++C)for(var M=C-Math.floor(2.5),R=0;R<20;++R){var w=[.4,.4,.4],A=[-Math.sin(18.23*R)*Math.PI,0,Math.cos(11.27*R)*Math.PI],x=[2-R-M,0,2-R+M];i.instancedCubeTransforms[b]={scale:w,translate:x,rotate:A,matrix:(new c.a).translate(x).rotateXYZ(A).scale(w)},i.instancedCubes.matrices.set(i.instancedCubeTransforms[b].matrix,16*b),++b}return i.instancedCubes.updateMatrixBuffer(),i.quadVertexArray=new l.p(f,{program:i.dofProgram,attributes:{aPosition:f.createBuffer(new Float32Array(h))}}),i}return Object(a.a)(t,e),t.prototype.onRender=function(e){var t=e.device,n=(e.tick,e.width,e.height,e.aspect),a=t.gl;this.sceneFramebuffer.resize(a.drawingBufferWidth,a.drawingBufferHeight),this.dofFramebuffer.resize(a.drawingBufferWidth,a.drawingBufferHeight);var r=v/Math.max(.1,Math.abs(g-v)),o=v*r/E,i=Math.sqrt(a.drawingBufferWidth*a.drawingBufferWidth+a.drawingBufferHeight*a.drawingBufferHeight)/35;Object(l.q)(a,{color:[0,0,0,1],depth:!0,framebuffer:this.sceneFramebuffer}),this.projMat.perspective({fov:Object(m.e)(75),aspect:n,near:.1,far:30}),this.viewMat.lookAt({eye:[3,1.5,3],center:[0,0,0],up:[0,1,0]});for(var f=0;f<100;++f){var u=this.instancedCubeTransforms[f];u.rotate[0]+=.01,u.rotate[1]+=.02,u.matrix.identity().translate(u.translate).rotateXYZ(u.rotate).scale(u.scale),this.instancedCubes.matrices.set(u.matrix,16*f)}this.instancedCubes.updateMatrixBuffer(),this.instancedCubes.draw({uniforms:{uProjection:this.projMat,uView:this.viewMat},framebuffer:this.sceneFramebuffer}),Object(l.q)(t,{color:[0,0,0,1],framebuffer:this.dofFramebuffer}),T[0]=1,T[1]=0,this.dofUniformsLayout.setUniforms({uFocusDistance:g,uBlurCoefficient:o,uPPM:i}),this.dofUniforms.setData(this.dofUniformsLayout.getData()),this.dofUniforms.bind(),this.dofProgram.setUniforms({uTexelOffset:T,uColor:this.sceneFramebuffer.color,uDepth:this.sceneFramebuffer.depth}),this.dofProgram.draw({vertexArray:this.quadVertexArray,drawMode:a.TRIANGLE_STRIP,vertexCount:4,framebuffer:this.dofFramebuffer}),Object(l.q)(t,{color:[0,0,0,1]}),T[0]=0,T[1]=1,this.dofProgram.setUniforms({uTexelOffset:T,uColor:this.sceneFramebuffer.color,uDepth:this.sceneFramebuffer.depth}),this.dofProgram.draw({vertexArray:this.quadVertexArray,drawMode:s.a.TRIANGLE_STRIP,vertexCount:4}),this.dofUniforms.unbind()},t}(d.a);b.info='\n<p>\n  <b>Depth of Field</b>.\n<p>\nSeveral instanced luma.gl <code>Cubes</code> rendered with a Depth of Field\npost-processing effect.\n\n<div>\n  <label>Focal Length</label><input type="range" id="focal-length" min="0.1" max="10.0" step="0.1">\n</div>\n<div>\n  <label>Focus Distance</label><input type="range" id="focus-distance" min="0.1" max="10.0" step="0.1">\n</div>\n<div>\n  <label>F-Stop</label><input type="range" id="f-stop" min="0.1" max="10.0" step="0.1">\n</div>\n\n',"undefined"==typeof window||window.website||d.a.run(b).start();var C=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){return o.a.createElement(i.a,{AnimationLoop:b,exampleConfig:this.props.pageContext.exampleConfig})},t}(o.a.Component)}}]);