{"componentChunkName":"component---node-modules-gatsby-theme-ocular-src-react-templates-documentation-jsx","path":"/docs/modules/shadertools/assemble-shaders","result":{"data":{"docBySlug":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"shader-assembly\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#shader-assembly\",\n    \"aria-label\": \"shader assembly permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Shader Assembly\"), mdx(\"p\", null, \"luma.gl's module shader system is primarily exposed via the function \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"assembleShaders\"), \" which composes base vertex and fragment shader source with shader modules, hook functions and injections to generate the final vertex and fragment shader source that can be used to create a program.\"), mdx(\"h3\", {\n    \"id\": \"code-classlanguage-textassembleshaderscode\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#code-classlanguage-textassembleshaderscode\",\n    \"aria-label\": \"code classlanguage textassembleshaderscode permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h3\",\n    \"className\": \"language-text\"\n  }, \"assembleShaders\")), mdx(\"p\", null, \"Takes the source code of a vertex shader and a fragment shader, and a list of modules, defines, etc. Outputs resolved source code for both shaders, after adding prologue, adding defines, importing and transpiling modules, and injecting any shader fragments).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"vs\"), \" - vertex shader source\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"fs\"), \" - fragment shader source code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"id\"), \" - \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"id\"), \" for the shader, will be used to inject shader names (using \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"#define SHADER_NAME\"), \") if not already present in the source.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"prologue\"), \"=\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"true\"), \" (Boolean) - Will inject platform prologue (see below)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"defines\"), \"=\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"{}\"), \" (Object) - a map of key/value pairs representing custom \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"#define\"), \"s to be injected into the shader source\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"modules\"), \"=\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"[]\"), \" (Array) - list of shader modules (either objects defining the module, or names of previously registered modules)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"inject\"), \"=\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"{}\"), \" (Object) - map of substituions,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"hookFunctions\"), \"=\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"[]\"), \" Array of hook functions descriptions. Descriptions can simply be the hook function signature (with a prefix \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"vs\"), \" for vertex shader, or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"fs\"), \" for fragment shader) or an object with the hook signature, and a header and footer that will always appear in the hook function. For example:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"transpileToGLSL100\"), \": force transpilation to GLSL ES 1.0 (see below)\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'vs:MY_HOOK_FUNCTION1(inout vec4 color)'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"hook\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'fs:MY_HOOK_FUNCTION2(inout vec4 color)'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"header\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'if (color.a == 0.0) discard;\\\\n'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"footer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'color.a *= 1.2;\\\\n'\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")))), mdx(\"p\", null, \"Returns:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"vs\"), \" - the resolved vertex shader\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"fs\"), \" - the resolved fragment shader\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"getUniforms\"), \" - a combined \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"getUniforms\"), \" function covering all modules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"moduleMap\"), \" - a map with all resolved modules, keyed by name\")), mdx(\"h2\", {\n    \"id\": \"shader-hooks-and-module-injections\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#shader-hooks-and-module-injections\",\n    \"aria-label\": \"shader hooks and module injections permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Shader Hooks and Module Injections\"), mdx(\"p\", null, \"Shader hooks and module injections are a system that allows for shader to be written in a generic manner, with behaviour modified when modules are included. For example if we define a shader hook as \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"fs:MY_HOOK_FUNCTION(inout vec4 color)\"), \", \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"assembleShader\"), \" will inject the following function automatically into our fragment shader:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"c\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-c\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"void\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"MY_HOOK_FUNCTION\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"inout vec4 color\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"We can the write our fragment shader as follows:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"c\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-c\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"precision highp \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"float\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"void\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"main\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  vec4 color \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"vec4\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"1.0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  gl_FragColor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"MY_HOOK_FUNCTION\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"color\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"By default, the hook function is a no-op, so this doesn't do anything. However, if we add a module injection like the following:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"picking\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string-property property\"\n  }, \"'fs:VERTEX_HOOK_FUNCTION'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'color = vec4(1.0, 0.0, 0.0, 1.0);'\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"And pass the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"picking\"), \" module to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"assembledShaders\"), \", the hook function will be updated as follows:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"c\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-c\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"void\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"MY_HOOK_FUNCTION\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"inout vec4 color\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  color \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"vec4\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"1.0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"0.0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"0.0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"1.0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"The hook function now changes the color from white to red.\"), mdx(\"h2\", {\n    \"id\": \"constants-and-values\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#constants-and-values\",\n    \"aria-label\": \"constants and values permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Constants and Values\"), mdx(\"h3\", {\n    \"id\": \"predefined-injection-hooks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#predefined-injection-hooks\",\n    \"aria-label\": \"predefined injection hooks permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Predefined Injection Hooks\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Key\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shader\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"vs:#decl\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Vertex\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Inject at top of shader (declarations)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"vs:#main-start\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Vertex\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Injected at the very beginning of main function\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"vs:#main-end\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Vertex\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Injected at the very end of main function\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"fs:#decl\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fragment\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Inject at top of shader (declarations)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"fs:#main-start\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fragment\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Injected at the very beginning of main function\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"fs:#main-end\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fragment\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Injected at the very end of main function\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \": Injections assume that the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"main\"), \" function appears last in a shader.\"), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#usage\",\n    \"aria-label\": \"usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Usage\"), mdx(\"h3\", {\n    \"id\": \"injection-map\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#injection-map\",\n    \"aria-label\": \"injection map permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Injection Map\"), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"assembleShaders\"), \" (and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Model\"), \" constructor) will take an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"inject\"), \" argument that contains a map of:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"keys indicating hooks (predefined or functions)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"values representing code to be injected. This can be either a simple string or an object containing the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"injection\"), \" string and an \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"order\"), \" indicating its priority.\")), mdx(\"p\", null, \"Examples:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"  inject: {\\n    'fs:#main-end': '  gl_FragColor = picking_filterColor(gl_FragColor)'\\n  }\"))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"ProgramManager\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getDefaultProgramManager\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"gl\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"addShaderHook\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'fs:MYHOOK_fragmentColor(inout vec4 color)'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Model\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"gl\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  vs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"fs\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"void main() {\\n    MYHOOK_fragmentColor(gl_FragColor);\\n  }\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"modules\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"picking\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"inject\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string-property property\"\n  }, \"'fs:#main-start'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'gl_FragColor = vec4(1., 0., 0., 1.);'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string-property property\"\n  }, \"'fs:MYHOOK_fragmentColor'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"injection\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'  color = picking_filterColor(color);'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"order\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"9999\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")))), mdx(\"h2\", {\n    \"id\": \"transpilation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#transpilation\",\n    \"aria-label\": \"transpilation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Transpilation\"), mdx(\"p\", null, \"If the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"transpileToGLSL100\"), \" option is used, \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"assembleShaders\"), \" will attempt to transpile shaders to GLSL ES 1.0. This is a limited text replacement and requires that certain conventions be followed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Statements are written one per line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only one fragment shader output is supported.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GLSL 3.0-only features, such as 3D textures are not supported.\")), mdx(\"p\", null, \"Text transformations are performed according to the following tables:\"), mdx(\"p\", null, \"Vertex Shaders\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3.00 ES\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.00 ES\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Comment\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"in\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"attribute\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"out\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"varying\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"p\", null, \"Fragment Shaders\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3.00 ES\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.00 ES\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Comment\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"in\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"varying\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"out vec4 <varName>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"gl_FragColor\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"<varName>\"), \" declaration is removed and usage in the code are replaced with \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"gl_FragColor\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture2D\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture\"), \" will be replaced with \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture2D\"), \" to ensure 1.00 code is correct. See note on \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"textureCube\"), \" below.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"textureCube\"), \" \", \"*\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"textureCube\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"textureCube\"), \" is not valid 3.00 syntax, but must be used to ensure 1.00 code is correct, because \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture\"), \" will be substituted with \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture2D\"), \" when transpiled to 100. Also \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"textureCube\"), \" will be replaced with correct \", mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"texture\"), \" syntax when transpiled to 300.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":2,"excerpt":"Shader Assembly luma.gl's module shader system is primarily exposed via the function  assembleShaders  which composes base vertex and…","frontmatter":{"title":"Shader Assembly"}}},"pageContext":{"relativeLinks":{"docs":"/docs","../../../../docs":"/docs","docs/open-governance":"/docs/open-governance","../../../open-governance":"/docs/open-governance","docs/upgrade-guide":"/docs/upgrade-guide","../../../upgrade-guide":"/docs/upgrade-guide","docs/modules/webgl":"/docs/modules/webgl","../../webgl":"/docs/modules/webgl","docs/modules/webgpu":"/docs/modules/webgpu","../../webgpu":"/docs/modules/webgpu","docs/whats-new":"/docs/whats-new","../../../whats-new":"/docs/whats-new","docs/modules/shadertools":"/docs/modules/shadertools","../../shadertools":"/docs/modules/shadertools","docs/modules/shadertools/core-shader-modules":"/docs/modules/shadertools/core-shader-modules","../core-shader-modules":"/docs/modules/shadertools/core-shader-modules","docs/modules":"/docs/modules","../../../modules":"/docs/modules","docs/modules/test-utils/snapshot-test-runner":"/docs/modules/test-utils/snapshot-test-runner","../../test-utils/snapshot-test-runner":"/docs/modules/test-utils/snapshot-test-runner","docs/modules/shadertools/shader-info":"/docs/modules/shadertools/shader-info","../shader-info":"/docs/modules/shadertools/shader-info","docs/modules/shadertools/shader-logs":"/docs/modules/shadertools/shader-logs","../shader-logs":"/docs/modules/shadertools/shader-logs","docs/modules/gltools":"/docs/modules/gltools","../../gltools":"/docs/modules/gltools","docs/modules/shadertools/assemble-shaders":"/docs/modules/shadertools/assemble-shaders","../assemble-shaders":"/docs/modules/shadertools/assemble-shaders","docs/modules/experimental":"/docs/modules/experimental","../../experimental":"/docs/modules/experimental","docs/modules/experimental/scenegraph/group-node":"/docs/modules/experimental/scenegraph/group-node","../../experimental/scenegraph/group-node":"/docs/modules/experimental/scenegraph/group-node","docs/modules/test-utils":"/docs/modules/test-utils","../../test-utils":"/docs/modules/test-utils","docs/modules/experimental/scenegraph/model-node":"/docs/modules/experimental/scenegraph/model-node","../../experimental/scenegraph/model-node":"/docs/modules/experimental/scenegraph/model-node","docs/modules/experimental/gpgpu/histopyramid":"/docs/modules/experimental/gpgpu/histopyramid","../../experimental/gpgpu/histopyramid":"/docs/modules/experimental/gpgpu/histopyramid","docs/modules/experimental/scenegraph/scenegraph-node":"/docs/modules/experimental/scenegraph/scenegraph-node","../../experimental/scenegraph/scenegraph-node":"/docs/modules/experimental/scenegraph/scenegraph-node","docs/modules/experimental/gpgpu/gpu-point-in-polygon":"/docs/modules/experimental/gpgpu/gpu-point-in-polygon","../../experimental/gpgpu/gpu-point-in-polygon":"/docs/modules/experimental/gpgpu/gpu-point-in-polygon","docs/modules/shadertools/effects-shader-modules":"/docs/modules/shadertools/effects-shader-modules","../effects-shader-modules":"/docs/modules/shadertools/effects-shader-modules","docs/modules/engine":"/docs/modules/engine","../../engine":"/docs/modules/engine","docs/modules/engine/geometry":"/docs/modules/engine/geometry","../../engine/geometry":"/docs/modules/engine/geometry","docs/modules/engine/program-manager":"/docs/modules/engine/program-manager","../../engine/program-manager":"/docs/modules/engine/program-manager","docs/modules/engine/model":"/docs/modules/engine/model","../../engine/model":"/docs/modules/engine/model","docs/modules/engine/geometries":"/docs/modules/engine/geometries","../../engine/geometries":"/docs/modules/engine/geometries","docs/modules/engine/transform/buffer-transform":"/docs/modules/engine/transform/buffer-transform","../../engine/transform/buffer-transform":"/docs/modules/engine/transform/buffer-transform","docs/modules/engine/transform/texture-transform":"/docs/modules/engine/transform/texture-transform","../../engine/transform/texture-transform":"/docs/modules/engine/transform/texture-transform","docs/modules/engine/transform":"/docs/modules/engine/transform","../../engine/transform":"/docs/modules/engine/transform","docs/modules/engine/animation/key-frames":"/docs/modules/engine/animation/key-frames","../../engine/animation/key-frames":"/docs/modules/engine/animation/key-frames","docs/modules/debug":"/docs/modules/debug","../../debug":"/docs/modules/debug","docs/modules/engine/animation/timeline":"/docs/modules/engine/animation/timeline","../../engine/animation/timeline":"/docs/modules/engine/animation/timeline","docs/modules/engine/animation-loop":"/docs/modules/engine/animation-loop","../../engine/animation-loop":"/docs/modules/engine/animation-loop","docs/modules/core":"/docs/modules/core","../../core":"/docs/modules/core","docs/getting-started/README.mdx":"/docs/getting-started","../../../getting-started":"/docs/getting-started","docs/getting-started":"/docs/getting-started","docs/modules/api":"/docs/modules/api","../../api":"/docs/modules/api","docs/getting-started/external-context.mdx":"/docs/getting-started/external-context","../../../getting-started/external-context":"/docs/getting-started/external-context","docs/getting-started/external-context":"/docs/getting-started/external-context","docs/getting-started/hello-cube.mdx":"/docs/getting-started/hello-cube","../../../getting-started/hello-cube":"/docs/getting-started/hello-cube","docs/getting-started/hello-cube":"/docs/getting-started/hello-cube","docs/getting-started/hello-instancing.mdx":"/docs/getting-started/hello-instancing","../../../getting-started/hello-instancing":"/docs/getting-started/hello-instancing","docs/getting-started/hello-instancing":"/docs/getting-started/hello-instancing","docs/getting-started/lighting.mdx":"/docs/getting-started/lighting","../../../getting-started/lighting":"/docs/getting-started/lighting","docs/getting-started/lighting":"/docs/getting-started/lighting","docs/getting-started/hello-triangle.mdx":"/docs/getting-started/hello-triangle","../../../getting-started/hello-triangle":"/docs/getting-started/hello-triangle","docs/getting-started/hello-triangle":"/docs/getting-started/hello-triangle","docs/getting-started/shader-modules.mdx":"/docs/getting-started/shader-modules","../../../getting-started/shader-modules":"/docs/getting-started/shader-modules","docs/getting-started/shader-modules":"/docs/getting-started/shader-modules","docs/developer-guide":"/docs/developer-guide","../../../developer-guide":"/docs/developer-guide","docs/getting-started/transform.mdx":"/docs/getting-started/transform","../../../getting-started/transform":"/docs/getting-started/transform","docs/getting-started/transform":"/docs/getting-started/transform","docs/getting-started/shader-hooks.mdx":"/docs/getting-started/shader-hooks","../../../getting-started/shader-hooks":"/docs/getting-started/shader-hooks","docs/getting-started/shader-hooks":"/docs/getting-started/shader-hooks","docs/getting-started/whats-next":"/docs/getting-started/whats-next","../../../getting-started/whats-next":"/docs/getting-started/whats-next","docs/developer-guide/contributing":"/docs/developer-guide/contributing","../../../developer-guide/contributing":"/docs/developer-guide/contributing","docs/developer-guide/bundling":"/docs/developer-guide/bundling","../../../developer-guide/bundling":"/docs/developer-guide/bundling","docs/getting-started/instanced-transform.mdx":"/docs/getting-started/instanced-transform","../../../getting-started/instanced-transform":"/docs/getting-started/instanced-transform","docs/getting-started/instanced-transform":"/docs/getting-started/instanced-transform","docs/modules/constants":"/docs/modules/constants","../../constants":"/docs/modules/constants","docs/developer-guide/debugging":"/docs/developer-guide/debugging","../../../developer-guide/debugging":"/docs/developer-guide/debugging","docs/developer-guide/profiling":"/docs/developer-guide/profiling","../../../developer-guide/profiling":"/docs/developer-guide/profiling","docs/developer-guide/installing":"/docs/developer-guide/installing","../../../developer-guide/installing":"/docs/developer-guide/installing","docs/developer-guide/testing":"/docs/developer-guide/testing","../../../developer-guide/testing":"/docs/developer-guide/testing","docs/api-reference-legacy/context/device-pixels":"/docs/api-reference-legacy/context/device-pixels","../../../api-reference-legacy/context/device-pixels":"/docs/api-reference-legacy/context/device-pixels","docs/api-reference-legacy":"/docs/api-reference-legacy","../../../api-reference-legacy":"/docs/api-reference-legacy","docs/api-reference-legacy/context/context-api":"/docs/api-reference-legacy/context/context-api","../../../api-reference-legacy/context/context-api":"/docs/api-reference-legacy/context/context-api","docs/api-reference-legacy/context/context-properties":"/docs/api-reference-legacy/context/context-properties","../../../api-reference-legacy/context/context-properties":"/docs/api-reference-legacy/context/context-properties","docs/api-reference-legacy/context/parameter-setting":"/docs/api-reference-legacy/context/parameter-setting","../../../api-reference-legacy/context/parameter-setting":"/docs/api-reference-legacy/context/parameter-setting","docs/api-reference-legacy/classes/accessor":"/docs/api-reference-legacy/classes/accessor","../../../api-reference-legacy/classes/accessor":"/docs/api-reference-legacy/classes/accessor","docs/api-reference-legacy/classes/moving-data":"/docs/api-reference-legacy/classes/moving-data","../../../api-reference-legacy/classes/moving-data":"/docs/api-reference-legacy/classes/moving-data","docs/api-reference-legacy/classes":"/docs/api-reference-legacy/classes","../../../api-reference-legacy/classes":"/docs/api-reference-legacy/classes","docs/api-reference-legacy/context/feature-checking":"/docs/api-reference-legacy/context/feature-checking","../../../api-reference-legacy/context/feature-checking":"/docs/api-reference-legacy/context/feature-checking","docs/api-reference-legacy/classes/buffer":"/docs/api-reference-legacy/classes/buffer","../../../api-reference-legacy/classes/buffer":"/docs/api-reference-legacy/classes/buffer","docs/api-reference-legacy/classes/query":"/docs/api-reference-legacy/classes/query","../../../api-reference-legacy/classes/query":"/docs/api-reference-legacy/classes/query","docs/api-reference-legacy/classes/program":"/docs/api-reference-legacy/classes/program","../../../api-reference-legacy/classes/program":"/docs/api-reference-legacy/classes/program","docs/api-reference-legacy/classes/resource":"/docs/api-reference-legacy/classes/resource","../../../api-reference-legacy/classes/resource":"/docs/api-reference-legacy/classes/resource","docs/api-reference-legacy/classes/renderbuffer":"/docs/api-reference-legacy/classes/renderbuffer","../../../api-reference-legacy/classes/renderbuffer":"/docs/api-reference-legacy/classes/renderbuffer","docs/api-reference-legacy/classes/texture-2d":"/docs/api-reference-legacy/classes/texture-2d","../../../api-reference-legacy/classes/texture-2d":"/docs/api-reference-legacy/classes/texture-2d","docs/api-reference-legacy/classes/shader":"/docs/api-reference-legacy/classes/shader","../../../api-reference-legacy/classes/shader":"/docs/api-reference-legacy/classes/shader","docs/api-reference-legacy/classes/framebuffer":"/docs/api-reference-legacy/classes/framebuffer","../../../api-reference-legacy/classes/framebuffer":"/docs/api-reference-legacy/classes/framebuffer","docs/api-reference-legacy/classes/texture-3d":"/docs/api-reference-legacy/classes/texture-3d","../../../api-reference-legacy/classes/texture-3d":"/docs/api-reference-legacy/classes/texture-3d","docs/api-reference-legacy/classes/transform-feedback":"/docs/api-reference-legacy/classes/transform-feedback","../../../api-reference-legacy/classes/transform-feedback":"/docs/api-reference-legacy/classes/transform-feedback","docs/api-reference-legacy/classes/texture-cube":"/docs/api-reference-legacy/classes/texture-cube","../../../api-reference-legacy/classes/texture-cube":"/docs/api-reference-legacy/classes/texture-cube","docs/api-reference-legacy/classes/vertex-array-object":"/docs/api-reference-legacy/classes/vertex-array-object","../../../api-reference-legacy/classes/vertex-array-object":"/docs/api-reference-legacy/classes/vertex-array-object","docs/api-reference-legacy/classes/uniform-buffer-layout":"/docs/api-reference-legacy/classes/uniform-buffer-layout","../../../api-reference-legacy/classes/uniform-buffer-layout":"/docs/api-reference-legacy/classes/uniform-buffer-layout","docs/api-reference/device-features.mdx":"/docs/api-reference/device-features","../../../api-reference/device-features":"/docs/api-reference/device-features","docs/api-reference/device-features":"/docs/api-reference/device-features","docs/api-reference-legacy/classes/vertex-array":"/docs/api-reference-legacy/classes/vertex-array","../../../api-reference-legacy/classes/vertex-array":"/docs/api-reference-legacy/classes/vertex-array","docs/api-reference/device-limits.mdx":"/docs/api-reference/device-limits","../../../api-reference/device-limits":"/docs/api-reference/device-limits","docs/api-reference/device-limits":"/docs/api-reference/device-limits","docs/api-reference/external-texture":"/docs/api-reference/external-texture","../../../api-reference/external-texture":"/docs/api-reference/external-texture","docs/api-reference-legacy/classes/texture":"/docs/api-reference-legacy/classes/texture","../../../api-reference-legacy/classes/texture":"/docs/api-reference-legacy/classes/texture","docs/api-reference/device":"/docs/api-reference/device","../../../api-reference/device":"/docs/api-reference/device","docs/api-reference/canvas-context":"/docs/api-reference/canvas-context","../../../api-reference/canvas-context":"/docs/api-reference/canvas-context","docs/api-reference/types/shader-layout":"/docs/api-reference/types/shader-layout","../../../api-reference/types/shader-layout":"/docs/api-reference/types/shader-layout","docs/api-reference/resources/buffer":"/docs/api-reference/resources/buffer","../../../api-reference/resources/buffer":"/docs/api-reference/resources/buffer","docs/api-reference/resources/command-encoder":"/docs/api-reference/resources/command-encoder","../../../api-reference/resources/command-encoder":"/docs/api-reference/resources/command-encoder","docs/api-reference/resources/compute-pass":"/docs/api-reference/resources/compute-pass","../../../api-reference/resources/compute-pass":"/docs/api-reference/resources/compute-pass","docs/api-reference/resources/compute-pipeline":"/docs/api-reference/resources/compute-pipeline","../../../api-reference/resources/compute-pipeline":"/docs/api-reference/resources/compute-pipeline","docs/api-reference/texture-formats.mdx":"/docs/api-reference/texture-formats","../../../api-reference/texture-formats":"/docs/api-reference/texture-formats","docs/api-reference/texture-formats":"/docs/api-reference/texture-formats","docs/api-reference/resources/framebuffer":"/docs/api-reference/resources/framebuffer","../../../api-reference/resources/framebuffer":"/docs/api-reference/resources/framebuffer","docs/api-reference/resources/render-pass":"/docs/api-reference/resources/render-pass","../../../api-reference/resources/render-pass":"/docs/api-reference/resources/render-pass","docs/api-reference/resources/render-pipeline":"/docs/api-reference/resources/render-pipeline","../../../api-reference/resources/render-pipeline":"/docs/api-reference/resources/render-pipeline","docs/api-reference/resources/texture":"/docs/api-reference/resources/texture","../../../api-reference/resources/texture":"/docs/api-reference/resources/texture","docs/api-reference/resources/shader":"/docs/api-reference/resources/shader","../../../api-reference/resources/shader":"/docs/api-reference/resources/shader","docs/api-reference/engine/model":"/docs/api-reference/engine/model","../../../api-reference/engine/model":"/docs/api-reference/engine/model","docs/api-reference/resources/sampler":"/docs/api-reference/resources/sampler","../../../api-reference/resources/sampler":"/docs/api-reference/resources/sampler","docs/api-guide/bindings":"/docs/api-guide/bindings","../../../api-guide/bindings":"/docs/api-guide/bindings","docs/api-guide/device":"/docs/api-guide/device","../../../api-guide/device":"/docs/api-guide/device","docs/api-guide":"/docs/api-guide","../../../api-guide":"/docs/api-guide","docs/api-reference/engine/animation-loop":"/docs/api-reference/engine/animation-loop","../../../api-reference/engine/animation-loop":"/docs/api-reference/engine/animation-loop","docs/api-guide/rendering":"/docs/api-guide/rendering","../../../api-guide/rendering":"/docs/api-guide/rendering","docs/api-guide/resources":"/docs/api-guide/resources","../../../api-guide/resources":"/docs/api-guide/resources","docs/api-guide/parameters":"/docs/api-guide/parameters","../../../api-guide/parameters":"/docs/api-guide/parameters","docs/api-guide/shader-modules":"/docs/api-guide/shader-modules","../../../api-guide/shader-modules":"/docs/api-guide/shader-modules","docs/api-guide/transforms":"/docs/api-guide/transforms","../../../api-guide/transforms":"/docs/api-guide/transforms","docs/api-guide/v9-upgrade-parameters":"/docs/api-guide/v9-upgrade-parameters","../../../api-guide/v9-upgrade-parameters":"/docs/api-guide/v9-upgrade-parameters","docs/api-guide/textures.mdx":"/docs/api-guide/textures","../../../api-guide/textures":"/docs/api-guide/textures","docs/api-guide/textures":"/docs/api-guide/textures","docs/api-guide/webgpu-vs-webgl":"/docs/api-guide/webgpu-vs-webgl","../../../api-guide/webgpu-vs-webgl":"/docs/api-guide/webgpu-vs-webgl","docs/api-guide/v9-api":"/docs/api-guide/v9-api","../../../api-guide/v9-api":"/docs/api-guide/v9-api","modules/webgpu":"/modules/webgpu","../../../../modules/webgpu":"/modules/webgpu","modules/webgl":"/modules/webgl","../../../../modules/webgl":"/modules/webgl","modules/test-utils":"/modules/test-utils","../../../../modules/test-utils":"/modules/test-utils","modules/shadertools":"/modules/shadertools","../../../../modules/shadertools":"/modules/shadertools","modules/experimental":"/modules/experimental","../../../../modules/experimental":"/modules/experimental","modules/debug":"/modules/debug","../../../../modules/debug":"/modules/debug","modules/core":"/modules/core","../../../../modules/core":"/modules/core","modules/api":"/modules/api","../../../../modules/api":"/modules/api","modules/constants":"/modules/constants","../../../../modules/constants":"/modules/constants"},"title":"Shader Assembly","slug":"docs/modules/shadertools/assemble-shaders","toc":"docs"}},"staticQueryHashes":["484347790"]}