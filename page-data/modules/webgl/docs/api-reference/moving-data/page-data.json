{"componentChunkName":"component---node-modules-gatsby-theme-ocular-src-react-templates-documentation-jsx","path":"/modules/webgl/docs/api-reference/moving-data","result":{"data":{"docBySlug":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"moving-data\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#moving-data\",\n    \"aria-label\": \"moving data permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Moving Data\"), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"luma.gl\"), \" offers a set of functions that copy or blit data from and to Texture and Framebuffer objects. Image data can also be copied into Buffer, TypedArray, Images or Urls.\"), mdx(\"h2\", {\n    \"id\": \"readback-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#readback-functions\",\n    \"aria-label\": \"readback functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Readback Functions\"), mdx(\"h3\", {\n    \"id\": \"readpixelstoarraysource--framebuffertexture--options-object--typedarray\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#readpixelstoarraysource--framebuffertexture--options-object--typedarray\",\n    \"aria-label\": \"readpixelstoarraysource  framebuffertexture  options object  typedarray permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"readPixelsToArray(source : Framebuffer|Texture \", \"[, options: Object]\", \") : TypedArray\"), mdx(\"p\", null, \"Reads data from a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" object into a TypedArray object and returns it. A new TypedArray object is created when not provided. This method requires a sync between CPU and GPU as pixel values are copied from GPU texture memory to CPU Array object memory. This could introduce a delay as it waits for GPU to finish updating the texture. For asynchronous read, check \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"copyToBuffer\"), \" method.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"source\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - This object will be bound and data copied from it.\")), mdx(\"p\", null, \"Optional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceX\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: 0) X offset of the area to be copied,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceY\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: 0) Y offset of the area to be copied,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceFormat\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: GL.RGBA) The format of the data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceAttachment\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"COLOR_ATTACHMENT0\"), \") Used to deduce the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"type\"), \" when not provided.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.target\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"TypedArray\"), \", default: null) Array object, into which data to be copied, new object is created when not provided.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceWidth\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: source width) The width of the area to be copied.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceHeight\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: source height) The height of the area to be copied.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceType\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: type of \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"pixelArray\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"UNSIGNED_BYTE\"), \") The type of the data.\")), mdx(\"p\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reading from floating point textures is dependent on an extension both in WebGL 1 and WebGL 2.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When supported, the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"{format: GL.RGBA, type: GL.FLOAT, ...}\"), \" combination becomes valid for reading from a floating-point color buffer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When color attachment is a float texture with format less than 4 channels, i.e, \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.R32F\"), \", or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.RG32F\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"readPixels\"), \" should still be called with a 4 component \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"format\"), \"(\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.RGBA\"), \"), and default value (R:0, G:0, B: 0 and A: 1) will be returned for un-used channel.\")), mdx(\"p\", null, \"This function makes calls to the following WebGL APIs:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.readPixels\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.bindFramebuffer\"))), mdx(\"h3\", {\n    \"id\": \"readpixelstobuffersource--framebuffertexture-options-object--buffer-webgl-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#readpixelstobuffersource--framebuffertexture-options-object--buffer-webgl-2\",\n    \"aria-label\": \"readpixelstobuffersource  framebuffertexture options object  buffer webgl 2 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"readPixelsToBuffer(source : Framebuffer|Texture, options: Object) : Buffer (WebGL 2)\"), mdx(\"p\", null, \"Reads data from a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" object into A \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Buffer\"), \" object and returns it. A new \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Buffer\"), \" object is created when not provided. This method avoids a sync between CPU and GPU as pixel values are copied from GPU texture memory to GPU Buffer memory. This method returns right away without any delays.\"), mdx(\"p\", null, \"A CPU and GPU sync will be triggered when the returned buffer data is read using \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"buffer.getData()\"), \", but applications can delay this read, which can reduces the delay due to the sync, or the sync can be completely avoided by using the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Buffer\"), \" as the source of input to the GPU (either as \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ARRAY_BUFFER\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"PIXEL_UNPACK_BUFFER\"), \").\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"source\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - This object will be bound and data copied from it.\")), mdx(\"p\", null, \"Optional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceX\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: 0) X offset of the area to be copied,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceY\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: 0) Y offset of the area to be copied,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceFormat\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: GL.RGBA) The format of the data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.target\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Buffer\"), \") Buffer object, into which data to be copied, new object is created when not provided.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetByteOffset\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: 0) Byte offset from which data should be copied into buffer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceWidth\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: source.width) The width of the area to be copied,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceHeight\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: source.height) The height of the area to be copied,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceType\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: type of \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"target\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"UNSIGNED_BYTE\"), \") The type of the data.\")), mdx(\"p\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reading from floating point textures is dependent on an extension both in WebGL 1 and WebGL 2.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When supported, the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"{format: GL.RGBA, type: GL.FLOAT, ...}\"), \" combination becomes valid for reading from a floating-point color buffer.\")), mdx(\"p\", null, \"This function makes calls to the following WebGL APIs:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.readPixels\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.bindFramebuffer\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.bindBuffer\"))), mdx(\"h2\", {\n    \"id\": \"copy-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#copy-functions\",\n    \"aria-label\": \"copy functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Copy Functions\"), mdx(\"h3\", {\n    \"id\": \"copytodataurlsource--framebuffertexture-options-object--data-url\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#copytodataurlsource--framebuffertexture-options-object--data-url\",\n    \"aria-label\": \"copytodataurlsource  framebuffertexture options object  data url permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"copyToDataUrl(source : Framebuffer|Texture, options: Object) : Data URL\"), mdx(\"p\", null, \"Reads data form a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" object and returns a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Data URL\"), \" containing the pixel data in PNG format.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"source\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - This object will be bound and data copied from it.\")), mdx(\"p\", null, \"Optional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceAttachment\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"COLOR_ATTACHMENT0\"), \") Used to deduce the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"type\"), \" when not provided.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetMaxHeight\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"number\"), \", default: Number.MAX_SAFE_INTEGER) Maximum height of the image to be in returned Data URL.\")), mdx(\"p\", null, \"Note:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Works only under a browser environment, doesn't work under Node.\")), mdx(\"p\", null, \"This function makes calls to the following WebGL APIs:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.readPixels\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.bindFramebuffer\"))), mdx(\"h3\", {\n    \"id\": \"copytoimagesource--framebuffertexture-options-object--image\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#copytoimagesource--framebuffertexture-options-object--image\",\n    \"aria-label\": \"copytoimagesource  framebuffertexture options object  image permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"copyToImage(source : Framebuffer|Texture, options: Object) : Image\"), mdx(\"p\", null, \"Reads data form a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" object and copies it to provided image, new \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Image\"), \" instance is created if not provided.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"source\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - This object will be bound and data copied from it.\")), mdx(\"p\", null, \"Optional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceAttachment\"), \" - (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"GLenum\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"COLOR_ATTACHMENT0\"), \") Used to deduce the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"type\"), \" when not provided.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetImage\"), \" - (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Image\"), \", Optional) \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Image\"), \" to to which pixel data to be copied, new one is created if not provide.\")), mdx(\"p\", null, \"Note:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Works only under a browser environment, doesn't work under Node.\")), mdx(\"p\", null, \"This function makes calls to the following WebGL APIs:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.readPixels\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.bindFramebuffer\"))), mdx(\"h3\", {\n    \"id\": \"copytotexturesource--framebuffertexture-target-texturegl-enum-options-object--texture\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#copytotexturesource--framebuffertexture-target-texturegl-enum-options-object--texture\",\n    \"aria-label\": \"copytotexturesource  framebuffertexture target texturegl enum options object  texture permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"copyToTexture(source : Framebuffer|Texture, target: Texture|GL-enum, options: Object) : Texture\"), mdx(\"p\", null, \"Copies pixels from a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" object into the specified area of a two-dimensional texture image or cube-map texture image. (gl.copyTexImage2D, gl.copyTexSubImage2D and gl.copyTexSubImage3D wrapper)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"source\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - If provided this object will be bound and data copied from it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"target\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL enum\"), \") - Texture object or GL enum specifying the target binding point, to which data to be copied. If target binding point is specified, it is assumed that a valid texture object is already bound.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceX\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional, default: 0) - x coordinate of the lower left corner where to start copying.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceY\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional, default: 0) - y coordinate of the lower left corner where to start copying.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetX\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional) - X offset with in target texture.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetY\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional) - Y offset with in target texture.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetZ\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional, WebGL 2) - Z offset with in target texture, when using copying into 2D Array of 3D texture.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.width\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional, default: texture.width) - Width of the pixel rectangle to be copied.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.height\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", optional, default: texture.height) - Height of the pixel rectangle to be copied.\")), mdx(\"p\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"targetX\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"targetY\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"targetZ\"), \" : when an offset is specified, it implies we are copying data into a sub region of the target texture and internally \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"gl.copyTexSubImage2D\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"gl.copyTexSubImage3D\"), \" are used based on the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"target\"), \", for these cases it is assumed that target texture has enough GPU memory already allocated. When none of the offsets are specified, \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"gl.copyTexImage2D\"), \" is used to copy data to entire target region and GPU memory is allocated if needed, target texture GPU memory doesn't have to be pre-allocated.\")), mdx(\"p\", null, \"This function makes calls to the following WebGL APIs:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexImage2D\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.copyTexImage2D\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.copyTexSubImage2D\")), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/copyTexSubImage3D\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl,copyTexSubImage3D\"))), mdx(\"h2\", {\n    \"id\": \"blit-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#blit-functions\",\n    \"aria-label\": \"blit functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Blit Functions\"), mdx(\"h3\", {\n    \"id\": \"blitoptions-object--webgl-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#blitoptions-object--webgl-2\",\n    \"aria-label\": \"blitoptions object  webgl 2 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"blit(options: Object) : (WebGL 2)\"), mdx(\"p\", null, \"Copies a rectangle of pixels from a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" object into a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \" object.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"source\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - This object will be bound and data copied from it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.target\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Texture\"), \" or \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Framebuffer\"), \") - This object will be bound and data is copied into it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceAttachment\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLenum\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"COLOR_ATTACHMENT0\"), \") - Attachment index from which data to be copied from.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceX0\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"0\"), \") - Lower X bound of copy rectangle in source.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceY0\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"0\"), \") - Lower Y bound of copy rectangle in source.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceX1\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \") - Higher X bound of copy rectangle in source.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.sourceY1\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \") - Higher Y bound of copy rectangle in source.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetX0\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"0\"), \") - Lower X bound of copy rectangle in destination.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetY0\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"0\"), \") - Lower Y bound of copy rectangle in destination.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetX1\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \") - Higher X bound of copy rectangle in destination.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.targetY1\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLint\"), \") - Higher Y bound of copy rectangle in destination.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.mask\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLbitfild\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"0\"), \") - A \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GLbitfield\"), \" specifying a bitwise OR mask indicating which buffers are to be copied, possible buffers masks are \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.COLOR_BUFFER_BIT\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.DEPTH_BUFFER_BIT\"), \" and \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.STENCIL_BUFFER_BIT\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.color\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Boolean\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"true\"), \") - When true \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.COLOR_BUFFER_BIT\"), \" is added to the mask.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.depth\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Boolean\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"false\"), \") - When true \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.DEPTH_BUFFER_BIT\"), \" is added to the mask.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.stencil\"), \" (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"Boolean\"), \", default: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"false\"), \") - When true \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.STENCIL_BUFFER_BIT\"), \" is added to the mask.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"options.filter\"), \"=\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.NEAREST\"), \" - specifies interpolation mode if stretching is needed. \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"GL.LINEAR\"), \" can be used exclusively for color buffers.\")), mdx(\"p\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are a number of restrictions when blitting between integer and floating point formats.\")), mdx(\"p\", null, \"This function makes calls to the following WebGL APIs:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/blitFramebuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.blitFramebuffer\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/readBuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.readBuffer\")), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"gl.bindFramebuffer\"))));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":4,"excerpt":"Moving Data luma.gl  offers a set of functions that copy or blit data from and to Texture and Framebuffer objects. Image data can also be…","frontmatter":{"title":"Moving Data"}}},"pageContext":{"relativeLinks":{"docs":"/docs","../../../../../docs":"/docs","docs/upgrade-guide":"/docs/upgrade-guide","../../../../../docs/upgrade-guide":"/docs/upgrade-guide","docs/whats-new":"/docs/whats-new","../../../../../docs/whats-new":"/docs/whats-new","docs/developer-guide":"/docs/developer-guide","../../../../../docs/developer-guide":"/docs/developer-guide","docs/developer-guide/accessors":"/docs/developer-guide/accessors","../../../../../docs/developer-guide/accessors":"/docs/developer-guide/accessors","docs/developer-guide/bundling":"/docs/developer-guide/bundling","../../../../../docs/developer-guide/bundling":"/docs/developer-guide/bundling","docs/developer-guide/contributing":"/docs/developer-guide/contributing","../../../../../docs/developer-guide/contributing":"/docs/developer-guide/contributing","docs/developer-guide/debugging":"/docs/developer-guide/debugging","../../../../../docs/developer-guide/debugging":"/docs/developer-guide/debugging","docs/developer-guide/shader-modules":"/docs/developer-guide/shader-modules","../../../../../docs/developer-guide/shader-modules":"/docs/developer-guide/shader-modules","docs/developer-guide/transform-feedback":"/docs/developer-guide/transform-feedback","../../../../../docs/developer-guide/transform-feedback":"/docs/developer-guide/transform-feedback","docs/getting-started":"/docs/getting-started","../../../../../docs/getting-started":"/docs/getting-started","docs/getting-started/external-context":"/docs/getting-started/external-context","../../../../../docs/getting-started/external-context":"/docs/getting-started/external-context","docs/getting-started/hello-cube":"/docs/getting-started/hello-cube","../../../../../docs/getting-started/hello-cube":"/docs/getting-started/hello-cube","docs/getting-started/hello-instancing-high":"/docs/getting-started/hello-instancing-high","../../../../../docs/getting-started/hello-instancing-high":"/docs/getting-started/hello-instancing-high","docs/getting-started/hello-instancing-low":"/docs/getting-started/hello-instancing-low","../../../../../docs/getting-started/hello-instancing-low":"/docs/getting-started/hello-instancing-low","docs/getting-started/hello-instancing-mid":"/docs/getting-started/hello-instancing-mid","../../../../../docs/getting-started/hello-instancing-mid":"/docs/getting-started/hello-instancing-mid","docs/getting-started/hello-triangle":"/docs/getting-started/hello-triangle","../../../../../docs/getting-started/hello-triangle":"/docs/getting-started/hello-triangle","docs/getting-started/high-medium-low":"/docs/getting-started/high-medium-low","../../../../../docs/getting-started/high-medium-low":"/docs/getting-started/high-medium-low","docs/getting-started/instanced-transform":"/docs/getting-started/instanced-transform","../../../../../docs/getting-started/instanced-transform":"/docs/getting-started/instanced-transform","docs/getting-started/lighting":"/docs/getting-started/lighting","../../../../../docs/getting-started/lighting":"/docs/getting-started/lighting","docs/getting-started/shader-hooks":"/docs/getting-started/shader-hooks","../../../../../docs/getting-started/shader-hooks":"/docs/getting-started/shader-hooks","docs/getting-started/shader-modules-low":"/docs/getting-started/shader-modules-low","../../../../../docs/getting-started/shader-modules-low":"/docs/getting-started/shader-modules-low","docs/getting-started/shader-modules":"/docs/getting-started/shader-modules","../../../../../docs/getting-started/shader-modules":"/docs/getting-started/shader-modules","docs/getting-started/transform-feedback":"/docs/getting-started/transform-feedback","../../../../../docs/getting-started/transform-feedback":"/docs/getting-started/transform-feedback","docs/getting-started/whats-next":"/docs/getting-started/whats-next","../../../../../docs/getting-started/whats-next":"/docs/getting-started/whats-next","modules/constants":"/modules/constants","../../../../constants":"/modules/constants","modules/core":"/modules/core","../../../../core":"/modules/core","modules/debug":"/modules/debug","../../../../debug":"/modules/debug","modules/experimental":"/modules/experimental","../../../../experimental":"/modules/experimental","modules/shadertools":"/modules/shadertools","../../../../shadertools":"/modules/shadertools","modules/test-utils":"/modules/test-utils","../../../../test-utils":"/modules/test-utils","modules/webgl":"/modules/webgl","../../../../webgl":"/modules/webgl","modules/debug/docs":"/modules/debug/docs","../../../../debug/docs":"/modules/debug/docs","modules/engine/docs/api-reference/animation-loop":"/modules/engine/docs/api-reference/animation-loop","../../../../engine/docs/api-reference/animation-loop":"/modules/engine/docs/api-reference/animation-loop","modules/engine/docs/api-reference/geometries":"/modules/engine/docs/api-reference/geometries","../../../../engine/docs/api-reference/geometries":"/modules/engine/docs/api-reference/geometries","modules/engine/docs/api-reference/geometry":"/modules/engine/docs/api-reference/geometry","../../../../engine/docs/api-reference/geometry":"/modules/engine/docs/api-reference/geometry","modules/engine/docs/api-reference/model":"/modules/engine/docs/api-reference/model","../../../../engine/docs/api-reference/model":"/modules/engine/docs/api-reference/model","modules/engine/docs/api-reference/program-manager":"/modules/engine/docs/api-reference/program-manager","../../../../engine/docs/api-reference/program-manager":"/modules/engine/docs/api-reference/program-manager","modules/engine/docs/api-reference/transform":"/modules/engine/docs/api-reference/transform","../../../../engine/docs/api-reference/transform":"/modules/engine/docs/api-reference/transform","modules/experimental/docs/api-reference/warning":"/modules/experimental/docs/api-reference/warning","../../../../experimental/docs/api-reference/warning":"/modules/experimental/docs/api-reference/warning","modules/gltools/docs/api-reference/context":"/modules/gltools/docs/api-reference/context","../../../../gltools/docs/api-reference/context":"/modules/gltools/docs/api-reference/context","modules/gltools/docs/api-reference/device-pixels":"/modules/gltools/docs/api-reference/device-pixels","../../../../gltools/docs/api-reference/device-pixels":"/modules/gltools/docs/api-reference/device-pixels","modules/gltools/docs/api-reference/parameter-setting":"/modules/gltools/docs/api-reference/parameter-setting","../../../../gltools/docs/api-reference/parameter-setting":"/modules/gltools/docs/api-reference/parameter-setting","modules/shadertools/docs/api-reference/assemble-shaders":"/modules/shadertools/docs/api-reference/assemble-shaders","../../../../shadertools/docs/api-reference/assemble-shaders":"/modules/shadertools/docs/api-reference/assemble-shaders","modules/shadertools/docs/api-reference/core-shader-modules":"/modules/shadertools/docs/api-reference/core-shader-modules","../../../../shadertools/docs/api-reference/core-shader-modules":"/modules/shadertools/docs/api-reference/core-shader-modules","modules/shadertools/docs/api-reference/effects-shader-modules":"/modules/shadertools/docs/api-reference/effects-shader-modules","../../../../shadertools/docs/api-reference/effects-shader-modules":"/modules/shadertools/docs/api-reference/effects-shader-modules","modules/test-utils/docs/api-reference/snapshot-test-runner":"/modules/test-utils/docs/api-reference/snapshot-test-runner","../../../../test-utils/docs/api-reference/snapshot-test-runner":"/modules/test-utils/docs/api-reference/snapshot-test-runner","modules/webgl/docs/api-reference/accessor":"/modules/webgl/docs/api-reference/accessor","../accessor":"/modules/webgl/docs/api-reference/accessor","modules/webgl/docs/api-reference/buffer":"/modules/webgl/docs/api-reference/buffer","../buffer":"/modules/webgl/docs/api-reference/buffer","modules/webgl/docs/api-reference/framebuffer":"/modules/webgl/docs/api-reference/framebuffer","../framebuffer":"/modules/webgl/docs/api-reference/framebuffer","modules/webgl/docs/api-reference/moving-data":"/modules/webgl/docs/api-reference/moving-data","../moving-data":"/modules/webgl/docs/api-reference/moving-data","modules/webgl/docs/api-reference/program":"/modules/webgl/docs/api-reference/program","../program":"/modules/webgl/docs/api-reference/program","modules/webgl/docs/api-reference/query":"/modules/webgl/docs/api-reference/query","../query":"/modules/webgl/docs/api-reference/query","modules/webgl/docs/api-reference/renderbuffer":"/modules/webgl/docs/api-reference/renderbuffer","../renderbuffer":"/modules/webgl/docs/api-reference/renderbuffer","modules/webgl/docs/api-reference/resource":"/modules/webgl/docs/api-reference/resource","../resource":"/modules/webgl/docs/api-reference/resource","modules/webgl/docs/api-reference/shader":"/modules/webgl/docs/api-reference/shader","../shader":"/modules/webgl/docs/api-reference/shader","modules/webgl/docs/api-reference/texture-2d":"/modules/webgl/docs/api-reference/texture-2d","../texture-2d":"/modules/webgl/docs/api-reference/texture-2d","modules/webgl/docs/api-reference/texture-3d":"/modules/webgl/docs/api-reference/texture-3d","../texture-3d":"/modules/webgl/docs/api-reference/texture-3d","modules/webgl/docs/api-reference/texture-cube":"/modules/webgl/docs/api-reference/texture-cube","../texture-cube":"/modules/webgl/docs/api-reference/texture-cube","modules/webgl/docs/api-reference/texture":"/modules/webgl/docs/api-reference/texture","../texture":"/modules/webgl/docs/api-reference/texture","modules/webgl/docs/api-reference/transform-feedback":"/modules/webgl/docs/api-reference/transform-feedback","../transform-feedback":"/modules/webgl/docs/api-reference/transform-feedback","modules/webgl/docs/api-reference/uniform-buffer-layout":"/modules/webgl/docs/api-reference/uniform-buffer-layout","../uniform-buffer-layout":"/modules/webgl/docs/api-reference/uniform-buffer-layout","modules/webgl/docs/api-reference/vertex-array-object":"/modules/webgl/docs/api-reference/vertex-array-object","../vertex-array-object":"/modules/webgl/docs/api-reference/vertex-array-object","modules/webgl/docs/api-reference/vertex-array":"/modules/webgl/docs/api-reference/vertex-array","../vertex-array":"/modules/webgl/docs/api-reference/vertex-array","modules/engine/docs/api-reference/animation/key-frames":"/modules/engine/docs/api-reference/animation/key-frames","../../../../engine/docs/api-reference/animation/key-frames":"/modules/engine/docs/api-reference/animation/key-frames","modules/engine/docs/api-reference/animation/timeline":"/modules/engine/docs/api-reference/animation/timeline","../../../../engine/docs/api-reference/animation/timeline":"/modules/engine/docs/api-reference/animation/timeline","modules/engine/docs/api-reference/transform/buffer-transform":"/modules/engine/docs/api-reference/transform/buffer-transform","../../../../engine/docs/api-reference/transform/buffer-transform":"/modules/engine/docs/api-reference/transform/buffer-transform","modules/engine/docs/api-reference/transform/texture-transform":"/modules/engine/docs/api-reference/transform/texture-transform","../../../../engine/docs/api-reference/transform/texture-transform":"/modules/engine/docs/api-reference/transform/texture-transform","modules/experimental/docs/api-reference/scenegraph/group-node":"/modules/experimental/docs/api-reference/scenegraph/group-node","../../../../experimental/docs/api-reference/scenegraph/group-node":"/modules/experimental/docs/api-reference/scenegraph/group-node","modules/experimental/docs/api-reference/scenegraph/model-node":"/modules/experimental/docs/api-reference/scenegraph/model-node","../../../../experimental/docs/api-reference/scenegraph/model-node":"/modules/experimental/docs/api-reference/scenegraph/model-node","modules/experimental/docs/api-reference/scenegraph/scenegraph-node":"/modules/experimental/docs/api-reference/scenegraph/scenegraph-node","../../../../experimental/docs/api-reference/scenegraph/scenegraph-node":"/modules/experimental/docs/api-reference/scenegraph/scenegraph-node","modules/webgl/docs/api-reference/context/context-properties":"/modules/webgl/docs/api-reference/context/context-properties","../context/context-properties":"/modules/webgl/docs/api-reference/context/context-properties","modules/webgl/docs/api-reference/context/feature-checking":"/modules/webgl/docs/api-reference/context/feature-checking","../context/feature-checking":"/modules/webgl/docs/api-reference/context/feature-checking"},"title":"Moving Data","slug":"modules/webgl/docs/api-reference/moving-data","toc":"docs"}},"staticQueryHashes":["484347790"]}