(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{UJBg:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return b}));var o=n("dI71"),i=n("q1tI"),a=n.n(i),r=n("z0FI"),s=(n("PF2M"),n("IZzc"),n("j+VE"),n("fgUk")),u=n("Zps3"),f=n("675W"),c=n("yIe6"),l=n("1MEA"),p=n("ebS/"),m=n("kh/P"),v={vs:{glsl:"#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform uniforms {\n  mat4 modelViewProjectionMatrix;\n};\n\nlayout(location=0) in vec3 position;\nlayout(location=1) in vec2 uv;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = modelViewProjectionMatrix * vec4(position, 1.0);\n  fragUV = uv;\n  fragPosition = vec4(position, 1.);\n  // fragPosition = 0.5 * (vec4(position, 1.) + vec4(1., 1., 1., 1.));\n}\n    ",wgsl:"\nstruct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>;\n};\n[[binding(0), group(0)]] var<uniform> uniforms : Uniforms;\n\nstruct VertexOutput {\n  [[builtin(position)]] Position : vec4<f32>;\n  [[location(0)]] fragUV : vec2<f32>;\n  [[location(1)]] fragPosition: vec4<f32>;\n};\n\n[[stage(vertex)]]\nfn main([[location(0)]] position : vec4<f32>,\n        [[location(1)]] uv : vec2<f32>) -> VertexOutput {\n  var output : VertexOutput;\n  output.Position = uniforms.modelViewProjectionMatrix * position;\n  output.fragUV = uv;\n  output.fragPosition = 0.5 * (position + vec4<f32>(1.0, 1.0, 1.0, 1.0));\n  return output;\n}        "},fs:{glsl:"#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\nin vec2 fragUV;\nin vec4 fragPosition;\n\nuniform sampler2D uTexture;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));;\n}\n  ",wgsl:"\n[[group(0), binding(1)]] var mySampler: sampler;\n[[group(0), binding(2)]] var myTexture: texture_2d<f32>;\n\n[[stage(fragment)]]\nfn main([[location(0)]] fragUV: vec2<f32>,\n        [[location(1)]] fragPosition: vec4<f32>) -> [[location(0)]] vec4<f32> {\n  let flippedUV = vec2<f32>(1.0 - fragUV.x, fragUV.y);\n  return textureSample(myTexture, mySampler, flippedUV) * fragPosition;\n}\n        "}},g={attributes:[{name:"positions",location:0,format:"float32x4"},{name:"uvs",location:1,format:"float32x2"}],bindings:[{name:"uniforms",location:0,type:"uniform"},{name:"sampler",location:1,type:"sampler"},{name:"texture",location:2,type:"texture"}]},d=function(e){function t(t){var n,o=t.device;n=e.call(this)||this;var i=o.createTexture({data:Object(s.b)("https://raw.githubusercontent.com/uber/luma.gl/8.5-release/examples/getting-started/hello-cube/vis-logo.png"),usage:u.a.TEXTURE_BINDING|u.a.COPY_DST|u.a.RENDER_ATTACHMENT,sampler:{magFilter:"linear",minFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},mipmaps:!0}),a=new c.a({indices:!1}),r=o.createBuffer({id:"cube-positions",data:a.attributes.POSITION.value}),p=o.createBuffer({id:"cube-uvs",data:a.attributes.TEXCOORD_0.value});return n.uniformBuffer=o.createBuffer({id:"uniforms",byteLength:64,usage:f.a.UNIFORM|f.a.COPY_DST}),n.model=new l.a(o,{id:"cube",vs:v.vs,fs:v.fs,layout:g,topology:"triangle-list",vertexCount:a.vertexCount,attributes:{positions:r,uvs:p},bindings:{uniforms:n.uniformBuffer,sampler:i.sampler||i,texture:i},parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back"}}),n}Object(o.a)(t,e);var n=t.prototype;return n.destroy=function(){this.model.destroy(),this.uniformBuffer.destroy()},n.frame=function(e){var t=e.device,n=new m.a,o=new m.a,i=new m.a,a=t.canvasContext.getAspect(),r=Date.now()/1e3;o.identity().translate([0,0,-4]).rotateAxis(1,[Math.sin(r),Math.cos(r),0]),n.perspective({fov:2*Math.PI/5,aspect:a,near:1,far:100}),i.copy(o).multiplyLeft(n),this.uniformBuffer.write(new Float32Array(i)),this.model.draw(),t.submit()},t}(p.a);globalThis.website||p.a.run(d,{type:"webgpu",canvas:"canvas"});var b=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props.pageContext,t=e&&e.exampleConfig||{};return a.a.createElement(r.a,{AnimationLoop:d,exampleConfig:t})},t}(a.a.Component)}}]);